{"version":3,"sources":["workerBrowser/worker.js"],"names":["window","Worker","Error","joinPaths","path1","path2","charAt","length","prependScriptUrl","scriptUrl","prefix","basepath","web","argsToArray","argumentsList","Array","prototype","slice","call","logError","error","stack","console","message","filename","lineno","fileName","match","substr","initialScript","importScripts","currentRunnable","currentImportScripts","initWorker","worker","addEventListener","handleMessage","bind","handleError","run","slaveCodeDataUri","slaveScriptUrl","fallback","toRun","alreadyInitializedToRun","runMethod","runScripts","method","methodStr","toString","args","substring","indexOf","split","body","lastIndexOf","postMessage","initByMethod","scripts","map","script","initByScripts","concat","send","param","transferables","doRun","kill","terminate","emit","promise","Promise","resolve","reject","resolved","rejected","result","removeListener","err","once","runnablesMatch","importScriptsMatch","event","data","progress","handleProgress","responseArgs","response","listeners","preventDefault","EventEmitter"],"mappings":"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","file":"worker.js","sourcesContent":["import EventEmitter from 'eventemitter3';\nimport slaveCodeDataUri from './slave-code-uri';\n\nimport { getConfig } from '../config';\n\nif (typeof window.Worker !== 'object' && typeof window.Worker !== 'function') {\n  throw new Error('Browser does not support web workers!');\n}\n\nfunction joinPaths (path1, path2) {\n  if (!path1 || !path2) {\n    return path1 + path2;\n  } else if (path1.charAt(path1.length - 1) === '/' || path2.charAt(0) === '/') {\n    return path1 + path2;\n  } else {\n    return path1 + '/' + path2;\n  }\n}\n\nfunction prependScriptUrl(scriptUrl) {\n  const prefix = getConfig().basepath.web;\n  return prefix ? joinPaths(prefix, scriptUrl) : scriptUrl;\n}\n\nfunction argsToArray(argumentsList) {\n  return Array.prototype.slice.call(argumentsList);\n}\n\nfunction logError(error) {\n  if (error.stack) {\n    console.error(error.stack);                                             // eslint-disable-line no-console\n  } else if (error.message && error.filename && error.lineno) {\n    const fileName = error.filename.match(/^data:text\\/javascript/) && error.filename.length > 50\n                   ? error.filename.substr(0, 50) + '...'\n                   : error.filename;\n    console.error(`${error.message} @${fileName}:${error.lineno}`);   // eslint-disable-line no-console\n  } else {\n    console.error(error);                                                   // eslint-disable-line no-console\n  }\n}\n\n\nexport default class Worker extends EventEmitter {\n  constructor(initialScript = null, importScripts = []) {\n    super();\n\n    // used by `run()` to decide if the worker must be re-initialized\n    this.currentRunnable = null;\n    this.currentImportScripts = [];\n\n    this.initWorker();\n    this.worker.addEventListener('message', this.handleMessage.bind(this));\n    this.worker.addEventListener('error', this.handleError.bind(this));\n\n    if (initialScript) {\n      this.run(initialScript, importScripts);\n    }\n  }\n\n  initWorker() {\n    try {\n      this.worker = new window.Worker(slaveCodeDataUri);\n    } catch (error) {\n      const slaveScriptUrl = getConfig().fallback.slaveScriptUrl;\n      if (slaveScriptUrl) {\n        // try using the slave script file instead of the data URI\n        this.worker = new window.Worker(slaveScriptUrl);\n      } else {\n        // re-throw\n        throw error;\n      }\n    }\n  }\n\n  run(toRun, importScripts = []) {\n    if (this.alreadyInitializedToRun(toRun, importScripts)) {\n      // don't re-initialize with the new logic if it already has been\n      return this;\n    }\n\n    if (typeof toRun === 'function') {\n      this.runMethod(toRun, importScripts);\n    } else {\n      this.runScripts(toRun, importScripts);\n    }\n\n    this.currentRunnable = toRun;\n    this.currentImportScripts = importScripts;\n\n    return this;\n  }\n\n  runMethod(method, importScripts) {\n    const methodStr = method.toString();\n    const args = methodStr.substring(methodStr.indexOf('(') + 1, methodStr.indexOf(')')).split(',');\n    const body = methodStr.substring(methodStr.indexOf('{') + 1, methodStr.lastIndexOf('}'));\n\n    this.worker.postMessage({\n      initByMethod : true,\n      method       : { args, body },\n      scripts      : importScripts.map(prependScriptUrl)\n    });\n  }\n\n  runScripts(script, importScripts) {\n    if (!script) { throw new Error('Must pass a function or a script URL to run().'); }\n\n    // attention: array for browser, single script for node\n    this.worker.postMessage({\n      initByScripts : true,\n      scripts       : importScripts.concat([ script ]).map(prependScriptUrl)\n    });\n  }\n\n  send(param, transferables = []) {\n    this.worker.postMessage({\n      doRun : true,\n      param\n    }, transferables);\n    return this;\n  }\n\n  kill() {\n    this.worker.terminate();\n    this.emit('exit');\n    return this;\n  }\n\n  promise() {\n    return new Promise((resolve, reject) => {\n      let resolved, rejected;\n      resolved = (result) => {\n        this.removeListener('error', rejected);\n        resolve(result);\n      };\n      rejected = (err) => {\n        this.removeListener('message', resolved);\n        reject(err);\n      };\n\n      this\n        .once('message', resolved)\n        .once('error', rejected);\n    });\n  }\n\n  alreadyInitializedToRun(toRun, importScripts) {\n    const runnablesMatch = this.currentRunnable === toRun;\n    const importScriptsMatch = this.currentImportScripts === importScripts\n      || (importScripts.length === 0 && this.currentImportScripts.length === 0);\n\n    return runnablesMatch && importScriptsMatch;\n  }\n\n  handleMessage(event) {\n    if (event.data.error) {\n      this.handleError(event.data.error);\n    } else if (event.data.progress) {\n      this.handleProgress(event.data.progress);\n    } else {\n      const responseArgs = argsToArray(event.data.response);\n      this.emit('message', ...responseArgs);\n      this.emit('done', ...responseArgs);    // this one is just for convenience\n    }\n  }\n\n  handleProgress(progress) {\n    this.emit('progress', progress);\n  }\n\n  handleError(error) {\n    if (!this.listeners('error', true)) {\n      logError(error);\n    }\n\n    if (error.preventDefault) {\n      error.preventDefault();\n    }\n\n    this.emit('error', error);\n  }\n}\n"]}